% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fileMDB.R
\name{fileMDB}
\alias{fileMDB}
\title{Create an MDB (Modeled DataBase) based on files: fileMDB}
\usage{
fileMDB(
  dataFiles,
  dbInfo,
  dataModel,
  readParameters = list(),
  collectionMembers = NULL,
  n_max = 10,
  verbose = FALSE
)
}
\arguments{
\item{dataFiles}{a named vector of path to data files with
\code{all(names(dataFiles) \%in\% names(dataModel))}}

\item{dbInfo}{a list with DB information:
\strong{"name"} (only mandatory field), "title", "description", "url",
"version", "maintainer".}

\item{dataModel}{a \link[ReDaMoR:RelDataModel]{ReDaMoR::RelDataModel} object}

\item{readParameters}{a list of parameters for reading the data file.
(e.g. \code{list(delim='\\t', quoted_na=FALSE,)})}

\item{collectionMembers}{the members of collections as provided to the
\link{collection_members<-} function (default: NULL ==> no member).}

\item{n_max}{maximum number of records to read
for checks purpose (default: 10). See also \code{\link[ReDaMoR:confront_data]{ReDaMoR::confront_data()}}.}

\item{verbose}{if TRUE display the data confrontation report}
}
\value{
A \link{fileMDB} object
}
\description{
Create an MDB (Modeled DataBase) based on files: fileMDB
}
\examples{
library(devTKCat)

hpof <- read_fileMDB(
   path=system.file("examples/HPO-subset", package="ReDaMoR"),
   dataModel=system.file("examples/HPO-model.json", package="ReDaMoR"),
   dbInfo=list(
      "name"="HPO",
      "title"="Data extracted from the HPO database",
      "description"=paste(
         "This is a very small subset of the HPO!",
         "Visit the reference URL for more information"
      ),
      "url"="http://human-phenotype-ontology.github.io/"
   )
)
count_records(hpof)

select(hpof, HPO_hp:HPO_diseases)
toTake <- "HPO_altId"
select(hpof, all_of(toTake))

hpoSlice <- slice(hpof, HPO_diseases=1:10)
count_records(hpoSlice)

if(requireNamespace("stringr", quietly = TRUE)){
   epilHP <- filter(
      hpof,
      HPO_diseases=stringr::str_detect(
         label, stringr::regex("epilepsy", ignore_case=TRUE)
      )
   )
   count_records(epilHP)
   label <- "Rolandic epilepsy"
   cn <- sym("label")
   reHP <- filter(
      hpof,
      HPO_diseases=!!cn==!!label
   )
}
}
